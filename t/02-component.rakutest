use Test;
use SBOM::Raku <component component-hash from-json>;

my constant $version = SBOM::Raku.^ver.Str;
my $io   := $*PROGRAM.parent.sibling("META6.json");
my $meta := $io.slurp;

sub component-ok($component, $source) is test-assertion {
    subtest "testing component from $source" => {
        plan 2;
        isa-ok $component, SBOM::Component;
        my $got      := $component.JSON;
        my $start    := $?LINE + 2;
        my $expected := Q:s:to|JSON|.chomp;
{
  "type": "library",
  "mime-type": "text/plain",
  "bom-ref": "pkg:raku/zef:lizmat/SBOM::Raku@$version",
  "authors": [
    {
      "bom-ref": "ElizabethMattijsen",
      "name": "Elizabeth Mattijsen"
    }
  ],
  "publisher": "zef",
  "group": "zef:lizmat",
  "name": "SBOM::Raku",
  "version": "$version",
  "description": "Raku specific SBOM functionality",
  "scope": "required",
  "licenses": [
    {
      "license": {
        "id": "Artistic-2.0",
        "acknowledgement": "declared",
        "url": "https://spdx.org/licenses/Artistic-2.0.json"
      }
    }
  ],
  "purl": "pkg:raku/zef:lizmat/SBOM::Raku@$version",
  "externalReferences": [
    {
      "url": "https://github.com/lizmat/SBOM-Raku",
      "type": "distribution"
    },
    {
      "url": "https://raku.land/zef:lizmat/SBOM::Raku?v=$version",
      "type": "documentation"
    },
    {
      "url": "https://github.com/lizmat/SBOM-Raku/issues",
      "type": "issue-tracker"
    },
    {
      "url": "https://spdx.org/licenses/Artistic-2.0.json",
      "type": "license"
    },
    {
      "url": "https://github.com/lizmat/SBOM-Raku/archive/refs/tags/$version.zip",
      "type": "source-distribution"
    },
    {
      "url": "mailto:liz@raku.rocks",
      "type": "support"
    }
  ],
  "tags": [
    "SBOM",
    "RAKU",
    "META"
  ]
}
JSON
        unless ok $got eq $expected, 'did we get the correct JSON' {
            my @expected = $expected.lines;
            for $got.lines.kv -> $i, $line {
                if $line ne @expected[$i] {
                    say "at line { $start + $i }:";
                    say "- @expected[$i]\n+ $line";
                    last;
                }
            }
        }
    }
}

plan 4;

component-ok component($io, :raw-error), "io";

my %meta := from-json $meta, :immutable;
component-ok component(%meta, :raw-error), "io/hash";

my %args := component-hash($io, :raw-error);
component-ok SBOM::Component.new(:raw-error, |%args), "io/args";

%args := component-hash(%meta, :raw-error);
component-ok SBOM::Component.new(:raw-error, |%args), "meta/args";

# vim: expandtab shiftwidth=4
