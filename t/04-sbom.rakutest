use Test;
use SBOM::Raku <sbom sbom-hash from-json>;

my constant $version = SBOM::Raku.^ver.Str;
my $timestamp       := DateTime.now;

my $io   := $*PROGRAM.parent.sibling("META6.json");
my $meta := $io.slurp;

sub sbom-ok($sbom, $source) is test-assertion {
    subtest "testing metadata from $source" => {
        plan 2;
        isa-ok $sbom, SBOM::CycloneDX;
        is $sbom.JSON, Q:s:to|JSON|.chomp, 'did we get the correct JSON';
{
  "bomFormat": "CycloneDX",
  "specVersion": "1.6",
  "version": 1,
  "metadata": {
    "timestamp": "$timestamp",
    "lifecycles": [
      {
        "phase": "build"
      }
    ],
    "authors": [
      {
        "name": "Elizabeth Mattijsen"
      }
    ],
    "component": {
      "type": "library",
      "mime-type": "text/plain",
      "authors": [
        {
          "name": "Elizabeth Mattijsen"
        }
      ],
      "publisher": "zef",
      "group": "zef",
      "name": "SBOM::Raku",
      "version": "$version",
      "description": "Raku specific SBOM functionality",
      "scope": "required",
      "licenses": [
        {
          "license": {
            "id": "Artistic-2.0",
            "acknowledgement": "declared"
          }
        }
      ],
      "purl": "pkg:raku/zef:lizmat/SBOM::Raku@$version",
      "externalReferences": [
        {
          "url": "https://raku.land/zef:lizmat/SBOM::Raku?v=$version",
          "type": "website"
        },
        {
          "url": "https://github.com/lizmat/SBOM-Raku.git",
          "type": "source-distribution"
        }
      ],
      "tags": [
        "SBOM",
        "RAKU",
        "META"
      ]
    },
    "licenses": [
      {
        "license": {
          "id": "Artistic-2.0",
          "acknowledgement": "declared"
        }
      }
    ]
  },
  "externalReferences": [
    {
      "url": "https://raku.land/zef:lizmat/SBOM::Raku?v=0.0.1",
      "type": "website"
    },
    {
      "url": "https://github.com/lizmat/SBOM-Raku.git",
      "type": "source-distribution"
    }
  ]
}
JSON
    }
}

plan 4;

sbom-ok sbom($io, :$timestamp, :raw-error), "io";

my %meta := from-json $meta, :immutable;
sbom-ok sbom(%meta, :$timestamp, :raw-error), "io/hash";

my %args := sbom-hash($io, :$timestamp, :raw-error);
sbom-ok SBOM::CycloneDX.new(:raw-error, |%args), "io/args";

%args := sbom-hash(%meta, :$timestamp, :raw-error);
sbom-ok SBOM::CycloneDX.new(:raw-error, |%args), "meta/args";

# vim: expandtab shiftwidth=4
